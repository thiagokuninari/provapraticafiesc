-- INCLUI NOVAS REGIONAIS PARA ADEQUAR NOVA ESTRUTURA DE CIDADE
INSERT INTO REGIONAL (ID, NOME, SITUACAO) VALUES (SEQ_REGIONAL.nextval, 'RBS', 'A');
INSERT INTO REGIONAL (ID, NOME, SITUACAO) VALUES (SEQ_REGIONAL.nextval, 'RCO', 'A');
INSERT INTO REGIONAL (ID, NOME, SITUACAO) VALUES (SEQ_REGIONAL.nextval, 'RMG', 'A');
INSERT INTO REGIONAL (ID, NOME, SITUACAO) VALUES (SEQ_REGIONAL.nextval, 'RNE', 'A');
INSERT INTO REGIONAL (ID, NOME, SITUACAO) VALUES (SEQ_REGIONAL.nextval, 'RNO', 'A');
INSERT INTO REGIONAL (ID, NOME, SITUACAO) VALUES (SEQ_REGIONAL.nextval, 'RPS', 'A');
INSERT INTO REGIONAL (ID, NOME, SITUACAO) VALUES (SEQ_REGIONAL.nextval, 'RRE', 'A');
INSERT INTO REGIONAL (ID, NOME, SITUACAO) VALUES (SEQ_REGIONAL.nextval, 'RRS', 'A');
INSERT INTO REGIONAL (ID, NOME, SITUACAO) VALUES (SEQ_REGIONAL.nextval, 'RSC', 'A');
INSERT INTO REGIONAL (ID, NOME, SITUACAO) VALUES (SEQ_REGIONAL.nextval, 'RSI', 'A');

-- CRIA TABELA RELACIONAL PARA UF E REGIONAL
CREATE TABLE UF_REGIONAL (
  FK_UF INTEGER NOT NULL,
  FK_REGIONAL INTEGER NOT NULL,
  PRIMARY KEY (FK_UF, FK_REGIONAL),
  FOREIGN KEY (FK_UF) REFERENCES UF (ID),
  FOREIGN KEY (FK_REGIONAL) REFERENCES REGIONAL (ID)
);